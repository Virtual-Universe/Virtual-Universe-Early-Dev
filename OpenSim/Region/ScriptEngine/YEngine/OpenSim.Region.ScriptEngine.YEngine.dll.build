<?xml version="1.0" ?>
<project name="OpenSim.Region.ScriptEngine.YEngine" default="build">
	  <target name="build">
		  <echo message="Build Directory is ${project::get-base-directory()}/${build.dir}" />
		  <mkdir dir="${project::get-base-directory()}/${build.dir}" />
		  <copy todir="${project::get-base-directory()}/${build.dir}" flatten="true">
			  <fileset basedir="${project::get-base-directory()}">
			  </fileset>
		  </copy>
		  <copy todir="${project::get-base-directory()}/${build.dir}">
			  <fileset basedir=".">
			  </fileset>
		  </copy>
		  <csc  target="library" debug="${build.debug}" platform="${build.platform}" unsafe="True" warnaserror="False" define="TRACE;DEBUG" nostdlib="False" main="" output="${project::get-base-directory()}/${build.dir}/${project::get-name()}.dll" noconfig="true">
			  <resources prefix="OpenSim.Region.ScriptEngine.YEngine" dynamicprefix="true" >
			  </resources>
			  <sources failonempty="true">
				  <include name="MMRDelegateCommon.cs" />
				  <include name="MMRIEventHandlers.cs" />
				  <include name="MMRInternalFuncDict.cs" />
				  <include name="MMRScriptBinOpStr.cs" />
				  <include name="MMRScriptCodeGen.cs" />
				  <include name="MMRScriptCollector.cs" />
				  <include name="MMRScriptCompValu.cs" />
				  <include name="MMRScriptCompile.cs" />
				  <include name="MMRScriptConsts.cs" />
				  <include name="MMRScriptEventCode.cs" />
				  <include name="MMRScriptInlines.cs" />
				  <include name="MMRScriptMyILGen.cs" />
				  <include name="MMRScriptObjCode.cs" />
				  <include name="MMRScriptObjWriter.cs" />
				  <include name="MMRScriptReduce.cs" />
				  <include name="MMRScriptTokenize.cs" />
				  <include name="MMRScriptTypeCast.cs" />
				  <include name="MMRScriptVarDict.cs" />
				  <include name="XMRArray.cs" />
				  <include name="XMREngXmrTestLs.cs" />
				  <include name="XMREngine.cs" />
				  <include name="XMREvents.cs" />
				  <include name="XMRHeapTracker.cs" />
				  <include name="XMRInstAbstract.cs" />
				  <include name="XMRInstBackend.cs" />
				  <include name="XMRInstCapture.cs" />
				  <include name="XMRInstCtor.cs" />
				  <include name="XMRInstMain.cs" />
				  <include name="XMRInstMisc.cs" />
				  <include name="XMRInstQueue.cs" />
				  <include name="XMRInstRun.cs" />
				  <include name="XMRObjectTokens.cs" />
				  <include name="XMRSDTypeClObj.cs" />
				  <include name="XMRScriptThread.cs" />
				  <include name="XMRScriptUThread.cs" />
			  </sources>
			  <references basedir="${project::get-base-directory()}">
				  <lib>
					  <include name="${project::get-base-directory()}" />
					  <include name="${project::get-base-directory()}/../../../../VirtualUniverse/bin" />
				  </lib>
                <include name="../../../../VirtualUniverse/bin/log4net.dll" />
                <include name="../../../../VirtualUniverse/bin/Mono.Addins.dll" />
                <include name="../../../../VirtualUniverse/bin/Nini.dll" />
                <include name="../../../../VirtualUniverse/bin/OpenMetaverse.dll" />
                <include name="../../../../VirtualUniverse/bin/OpenMetaverse.StructuredData.dll" />
                <include name="../../../../VirtualUniverse/bin/OpenMetaverseTypes.dll" />
                <include name="OpenSim.Framework.dll" />
                <include name="OpenSim.Framework.Console.dll" />
                <include name="OpenSim.Framework.Monitoring.dll" />
                <include name="OpenSim.Region.ClientStack.LindenCaps.dll" />
                <include name="OpenSim.Region.CoreModules.dll" />
                <include name="OpenSim.Region.Framework.dll" />
                <include name="OpenSim.Region.ScriptEngine.Shared.dll" />
                <include name="OpenSim.Region.ScriptEngine.Shared.Api.dll" />
                <include name="OpenSim.Region.ScriptEngine.Shared.Api.Runtime.dll" />
                <include name="OpenSim.Services.Interfaces.dll" />
                <include name="System.dll" />
                <include name="System.Drawing.dll" />
                <include name="System.Xml.dll" />
			  </references>
		  </csc>
        <echo message="Copying from [${project::get-base-directory()}/${build.dir}/] to [${project::get-base-directory()}/../../../../VirtualUniverse/bin/" />
        <mkdir dir="${project::get-base-directory()}/../../../../VirtualUniverse/bin/"/>
        <copy todir="${project::get-base-directory()}/../../../../VirtualUniverse/bin/">
            <fileset basedir="${project::get-base-directory()}/${build.dir}/" >
                <include name="*.dll"/>
                <include name="*.exe"/>
                <include name="*.mdb" if='${build.debug}'/>
                <include name="*.pdb" if='${build.debug}'/>
            </fileset>
        </copy>
	  </target>
	  <target name="clean">
		  <delete dir="${bin.dir}" failonerror="false" />
		  <delete dir="${obj.dir}" failonerror="false" />
	  </target>
	  <target name="doc" description="Creates documentation.">
	  </target>
</project>
